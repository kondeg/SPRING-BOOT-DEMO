{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/product.service\";\nimport * as i2 from \"./services/modal.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./components/global-error/global-error.component\";\nexport class AppComponent {\n  constructor(productsService, modalService) {\n    this.productsService = productsService;\n    this.modalService = modalService;\n    this.title = 'My Angular Spring Boot Demo';\n    //products: IProduct[] = []\n    this.loading = false;\n    this.term = '';\n  }\n  ngOnInit() {\n    // this.loading = true\n    //this.products$ = this.productsService.getAll().pipe(tap(()=>this.loading=false))\n    this.productsService.getAll().subscribe(() => {\n      this.loading = false;\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.ModalService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"max-w-2xl\", \"container\", \"mx-auto\", \"pt-5\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-global-error\");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelement(2, \"router-outlet\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i3.RouterOutlet, i4.GlobalErrorComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AAaA,OAAM,MAAOA,YAAY;EAMvBC,YAAoBC,eAA+B,EAASC,YAA0B;IAAlE,oBAAe,GAAfD,eAAe;IAAyB,iBAAY,GAAZC,YAAY;IALxE,UAAK,GAAG,6BAA6B;IACrC;IACA,YAAO,GAAG,KAAK;IAEf,SAAI,GAAG,EAAE;EAGT;EAEAC,QAAQ;IACP;IACC;IACC,IAAI,CAACF,eAAe,CAACG,MAAM,EAAE,CAACC,SAAS,CAAE,MAAK;MAC9C,IAAI,CAACC,OAAO,GAAG,KAAK;IACrB,CAAC,CAAC;EACJ;;AAhBWP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbzBC,mCAAqC;MACrCA,8BAA8C;MAC1CA,gCAA+B;MACnCA,iBAAM","names":["AppComponent","constructor","productsService","modalService","ngOnInit","getAll","subscribe","loading","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/Konstantin/eclipse-workspace/spring-boot-demo/src/front-end/src/app/app.component.ts","/Users/Konstantin/eclipse-workspace/spring-boot-demo/src/front-end/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core'\nimport { IProduct } from './models/product'\nimport {products as data} from './data/products'\nimport { ProductService } from './services/product.service'\nimport { Observable, tap } from 'rxjs'\nimport { ModalService } from './services/modal.service'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'My Angular Spring Boot Demo'\n  //products: IProduct[] = []\n  loading = false;\n  products$: Observable<IProduct[]>\n  term = ''\n  constructor (public productsService: ProductService, public modalService: ModalService) {\n   \n  }\n\n  ngOnInit(): void {\n   // this.loading = true\n    //this.products$ = this.productsService.getAll().pipe(tap(()=>this.loading=false))\n     this.productsService.getAll().subscribe( () => {\n     this.loading = false\n    }) \n  }\n\n}\n","<app-global-error></app-global-error>\n<div class=\"max-w-2xl container mx-auto pt-5\">\n    <router-outlet></router-outlet>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}