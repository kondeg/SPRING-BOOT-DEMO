{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterProductsPipe {\n  transform(products, search) {\n    return products.filter(p => p.title.toLocaleLowerCase().includes(search.toLowerCase()));\n  }\n}\nFilterProductsPipe.ɵfac = function FilterProductsPipe_Factory(t) {\n  return new (t || FilterProductsPipe)();\n};\nFilterProductsPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filterProducts\",\n  type: FilterProductsPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAE7BC,SAAS,CAACC,QAAoB,EAAEC,MAAc;IAC5C,OAAOD,QAAQ,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,CAACC,iBAAiB,EAAE,CAACC,QAAQ,CAACL,MAAM,CAACM,WAAW,EAAE,CAAC,CAAC;EACzF;;AAJWT,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;;QAAlBA,kBAAkB;EAAAU;AAAA","names":["FilterProductsPipe","transform","products","search","filter","p","title","toLocaleLowerCase","includes","toLowerCase","pure"],"sourceRoot":"","sources":["/Users/Konstantin/eclipse-workspace/spring-boot-demo/src/front-end/src/app/pipes/filter-products.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { IProduct } from '../models/product';\n\n@Pipe({\n  name: 'filterProducts'\n})\nexport class FilterProductsPipe implements PipeTransform {\n\n  transform(products: IProduct[], search: string): IProduct[] {\n    return products.filter(p => p.title.toLocaleLowerCase().includes(search.toLowerCase()))\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}