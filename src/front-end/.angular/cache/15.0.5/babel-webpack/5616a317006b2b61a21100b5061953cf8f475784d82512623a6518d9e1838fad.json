{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { catchError, delay, retry, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class ProductService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n  getAll() {\n    return this.http.get('https://fakestoreapi.com/products', {\n      params: new HttpParams({\n        fromObject: {\n          limit: 5\n        }\n      })\n    }).pipe(delay(200), retry(2), catchError(this.errorHandler.bind(this)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAAA,SAAwCA,UAAU,QAAQ,sBAAsB;AAEhF,SAASC,UAAU,EAAEC,KAAK,EAAcC,KAAK,EAAEC,UAAU,QAAQ,MAAM;;;;AAQvE,OAAM,MAAOC,cAAc;EACvBC,YAAoBC,IAAgB,EAAUC,YAA2B;IAArD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;EAE1D;EAEAC,MAAM;IACH,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,mCAAmC,EAC/D;MACIC,MAAM,EAAE,IAAIX,UAAU,CAAC;QAACY,UAAU,EAAE;UAACC,KAAK,EAAC;QAAC;MAAC,CAAC;KACjD,CAAC,CAACC,IAAI,CAACZ,KAAK,CAAC,GAAG,CAAC,EAClBC,KAAK,CAAC,CAAC,CAAC,EACRF,UAAU,CAAC,IAAI,CAACc,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACvC;EACT;EAEQD,YAAY,CAACE,KAAwB;IACzC,IAAI,CAACT,YAAY,CAACU,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOf,UAAU,CAAC,MAAMa,KAAK,CAACE,OAAO,CAAC;EAC1C;;AAlBSd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAHX;AAAM","names":["HttpParams","catchError","delay","retry","throwError","ProductService","constructor","http","errorService","getAll","get","params","fromObject","limit","pipe","errorHandler","bind","error","handle","message","factory","providedIn"],"sourceRoot":"","sources":["/Users/Konstantin/eclipse-workspace/spring-boot-demo/src/front-end/src/app/services/product.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { catchError, delay, Observable, retry, throwError } from \"rxjs\";\nimport { IProduct } from \"../models/product\";\nimport { ErrorService } from \"./error.service\";\n\n@Injectable({\n    providedIn: \"root\"\n})\n\nexport class ProductService {\n    constructor(private http: HttpClient, private errorService : ErrorService) {\n\n    }\n\n    getAll(): Observable<IProduct[]> {\n       return this.http.get<IProduct[]>('https://fakestoreapi.com/products',\n            {\n                params: new HttpParams({fromObject: {limit:5}})\n            }).pipe(delay(200),\n            retry(2),\n            catchError(this.errorHandler.bind(this))\n            )\n    }\n\n    private errorHandler(error: HttpErrorResponse) {\n        this.errorService.handle(error.message)\n        return throwError(() => error.message)\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}