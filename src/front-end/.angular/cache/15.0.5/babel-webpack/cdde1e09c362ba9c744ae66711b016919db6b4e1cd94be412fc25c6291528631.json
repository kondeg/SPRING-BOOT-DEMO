{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ErrorService {\n  constructor() {\n    this.error$ = new Subject();\n  }\n  handle(message) {\n    this.error$.next(message);\n  }\n  clear() {\n    this.error$.next('');\n  }\n}\nErrorService.ɵfac = function ErrorService_Factory(t) {\n  return new (t || ErrorService)();\n};\nErrorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ErrorService,\n  factory: ErrorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,YAAY;EAHzBC;IAIE,WAAM,GAAG,IAAIF,OAAO,EAAU;;EAC9BG,MAAM,CAACC,OAAe;IACpB,IAAI,CAACC,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC;EAC3B;EAEAG,KAAK;IACH,IAAI,CAACF,MAAM,CAACC,IAAI,CAAC,EAAE,CAAC;EACtB;;AARWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAO,SAAZP,YAAY;EAAAQ,YAFX;AAAM","names":["Subject","ErrorService","constructor","handle","message","error$","next","clear","factory","providedIn"],"sourceRoot":"","sources":["/Users/Konstantin/eclipse-workspace/spring-boot-demo/src/front-end/src/app/services/error.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  error$ = new Subject<string>()\n  handle(message: string) {\n    this.error$.next(message)\n  }\n\n  clear() {\n    this.error$.next('')\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}