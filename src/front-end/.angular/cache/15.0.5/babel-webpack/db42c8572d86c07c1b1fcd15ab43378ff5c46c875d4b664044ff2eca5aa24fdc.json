{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FocusDirective {\n  constructor(el) {\n    this.el = el;\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    this.el.nativeElement.focus();\n  }\n}\nFocusDirective.ɵfac = function FocusDirective_Factory(t) {\n  return new (t || FocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nFocusDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: FocusDirective,\n  selectors: [[\"\", \"appFocus\", \"\"]]\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,EAAc;IAAd,OAAE,GAAFA,EAAE;EAAgB;EAEtCC,QAAQ,IAGR;EACAC,eAAe;IACb,IAAI,CAACF,EAAE,CAACG,aAAa,CAACC,KAAK,EAAE;EAC/B;;AAVWN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAO;AAAA","names":["FocusDirective","constructor","el","ngOnInit","ngAfterViewInit","nativeElement","focus","selectors"],"sourceRoot":"","sources":["/Users/Konstantin/eclipse-workspace/spring-boot-demo/src/front-end/src/app/directives/focus.directive.ts"],"sourcesContent":["import { AfterViewInit, Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appFocus]'\n})\nexport class FocusDirective implements OnInit, AfterViewInit{\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit(): void {\n\n    \n  }\n  ngAfterViewInit(): void {\n    this.el.nativeElement.focus()\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}